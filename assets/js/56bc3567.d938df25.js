"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9218],{9745:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>a});var r=t(4848),i=t(8453);const s={},d="RegisterKeyBind",o={id:"lua-api/global-functions/registerkeybind",title:"RegisterKeyBind",description:"The RegisterKeyBind function is used to bind a key on the keyboard to a Lua function.",source:"@site/versioned_docs/version-3.0.0/lua-api/global-functions/registerkeybind.md",sourceDirName:"lua-api/global-functions",slug:"/lua-api/global-functions/registerkeybind",permalink:"/RE-UE4SS/3.0.0/lua-api/global-functions/registerkeybind",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-3.0.0/lua-api/global-functions/registerkeybind.md",tags:[],version:"3.0.0",frontMatter:{},sidebar:"docs",previous:{title:"RegisterInitGameStatePreHook",permalink:"/RE-UE4SS/3.0.0/lua-api/global-functions/registerinitgamestateprehook"},next:{title:"RegisterProcessConsoleExecPostHook",permalink:"/RE-UE4SS/3.0.0/lua-api/global-functions/registerprocessconsoleexecposthook"}},l={},a=[{value:"Parameters (overload #1)",id:"parameters-overload-1",level:2},{value:"Parameters (overload #2)",id:"parameters-overload-2",level:2},{value:"Example (overload #1)",id:"example-overload-1",level:2},{value:"Example (overload #2)",id:"example-overload-2",level:2},{value:"Advanced Example (overload #1)",id:"advanced-example-overload-1",level:2}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"registerkeybind",children:"RegisterKeyBind"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"RegisterKeyBind"})," function is used to bind a key on the keyboard to a Lua function."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Callbacks registered with this function are only executed when either the game or the debug console is in focus."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"parameters-overload-1",children:"Parameters (overload #1)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"#"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Sub Type"}),(0,r.jsx)(n.th,{children:"Information"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"table"}),(0,r.jsx)(n.td,{children:"Key"}),(0,r.jsx)(n.td,{children:"Key to bind"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"function"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Callback to execute when the key is hit on the keyboard"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"parameters-overload-2",children:"Parameters (overload #2)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"#"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Sub Type"}),(0,r.jsx)(n.th,{children:"Information"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"1"}),(0,r.jsx)(n.td,{children:"integer"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Key to bind, use the 'Key' table"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"2"}),(0,r.jsx)(n.td,{children:"table"}),(0,r.jsx)(n.td,{children:"ModifierKeys"}),(0,r.jsx)(n.td,{children:"Modifier keys required alongside the 'Key' parameter"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"3"}),(0,r.jsx)(n.td,{children:"function"}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Callback to execute when the key is hit on the keyboard"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"example-overload-1",children:"Example (overload #1)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"RegisterKeyBind(Key.O, function()\r\n    print(\"Key 'O' hit.\\n\")\r\nend)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"example-overload-2",children:"Example (overload #2)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:"RegisterKeyBind(Key.O, {ModifierKey.CONTROL, ModifierKey.ALT}, function()\r\n    print(\"Key 'CTRL + ALT + O' hit.\\n\")\r\nend)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"advanced-example-overload-1",children:"Advanced Example (overload #1)"}),"\n",(0,r.jsx)(n.p,{children:"This registers a key bind with a callback that does nothing unless there are no widgets currently open"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-lua",children:'local AnyWidgetsOpen = false\r\n\r\nRegisterHook("/Script/UMG.UserWidget:Construct", function()\r\n    AnyWidgetsOpen = true\r\nend)\r\n\r\nRegisterHook("/Script/UMG.UserWidget:Destruct", function()\r\n    AnyWidgetsOpen = false\r\nend)\r\n\r\nRegisterKeyBind(Key.B, function()\r\n    if AnyWidgetsOpen then return end\r\n    print("Key \'B\' hit, while no widgets are open.\\n")\r\nend)\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var r=t(6540);const i={},s=r.createContext(i);function d(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);