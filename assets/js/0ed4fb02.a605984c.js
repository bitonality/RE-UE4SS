"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2168],{7888:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var n=t(4848),a=t(8453);const s={},o="Lua API",i={id:"lua-api",title:"Lua API",description:"These are the Lua API functions available in UE4SS, on top of the standard libraries that Lua comes with by defualt.",source:"@site/versioned_docs/version-3.0.1/lua-api.md",sourceDirName:".",slug:"/lua-api",permalink:"/RE-UE4SS/lua-api",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-3.0.1/lua-api.md",tags:[],version:"3.0.1",frontMatter:{},sidebar:"docs",previous:{title:"Custom Game Configs",permalink:"/RE-UE4SS/custom-game-configs"},next:{title:"ArrayPropertyInfo",permalink:"/RE-UE4SS/lua-api/table-definitions/arraypropertyinfo"}},l={},c=[{value:"Full API Overview",id:"full-api-overview",level:2},{value:"Table Definitions",id:"table-definitions",level:3},{value:"Global Functions",id:"global-functions",level:3},{value:"Classes",id:"classes",level:3}];function u(e){const r={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"lua-api",children:"Lua API"}),"\n",(0,n.jsx)(r.p,{children:"These are the Lua API functions available in UE4SS, on top of the standard libraries that Lua comes with by defualt."}),"\n",(0,n.jsxs)(r.p,{children:["For version: ",(0,n.jsx)(r.strong,{children:"3.0.0"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Current status: ",(0,n.jsx)(r.strong,{children:"incomplete"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"full-api-overview",children:"Full API Overview"}),"\n",(0,n.jsx)(r.p,{children:"This is an overall list of API definitions available in UE4SS. For more readable information, see the individual API definition pages in the collapsible sections 4.1, 4.2 and 4.3."}),"\n",(0,n.jsxs)(r.blockquote,{children:["\n",(0,n.jsx)(r.p,{children:"Warning: This API list is not updated as often as the individual API definition pages. It may be out of date."}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"table-definitions",children:"Table Definitions"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"The definitions appear as: FieldName | FieldValueType"}),"\n",(0,n.jsx)(r.li,{children:"Fields that only have numeric field names have '#' as their name in this definition for clarity"}),"\n",(0,n.jsx)(r.li,{children:"All fields are required unless otherwise specified"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"    ModifierKeys\r\n        # | string (Microsoft Virtual Key-Code)\r\n\r\n    PropertyTypes\r\n        ObjectProperty      | internal_value\r\n        ObjectPtrProperty   | internal_value\r\n        Int8Property        | internal_value\r\n        Int16Property       | internal_value\r\n        IntProperty         | internal_value\r\n        Int64Property       | internal_value\r\n        NameProperty        | internal_value\r\n        FloatProperty       | internal_value\r\n        StrProperty         | internal_value\r\n        ByteProperty        | internal_value\r\n        UInt16Property      | internal_value\r\n        UIntProperty        | internal_value\r\n        UInt64Property      | internal_value\r\n        BoolProperty        | internal_value\r\n        ArrayProperty       | internal_value\r\n        MapProperty         | internal_value\r\n        StructProperty      | internal_value\r\n        ClassProperty       | internal_value\r\n        WeakObjectProperty  | internal_value\r\n        EnumProperty        | internal_value\r\n        TextProperty        | internal_value\r\n\r\n    OffsetInternalInfo\r\n        Property        | string (Name of the property to use as relative start instead of base)\r\n        RelativeOffset  | integer (Offset from relative start to this property)\r\n\r\n    ArrayPropertyInfo\r\n        Type | table (PropertyTypes)\r\n\r\n    CustomPropertyInfo\r\n        Name            | string (Name to use with the __index metamethod)\r\n        Type            | table (PropertyTypes)\r\n        BelongsToClass  | string (Full class name without type that this property belongs to)\r\n        OffsetInternal  | integer or table (if table: OffsetInternalInfo, otherwise: offset from base to this property)\r\n        ArrayProperty   | table (Optional, ArrayPropertyInfo)\r\n\r\n    EObjectFlags\r\n        - A table of object flags that can be or'd together by using |.\r\n        RF_NoFlags                       | 0x00000000\r\n        RF_Public                        | 0x00000001\r\n        RF_Standalone                    | 0x00000002\r\n        RF_MarkAsNative                  | 0x00000004\r\n        RF_Transactional                 | 0x00000008\r\n        RF_ClassDefaultObject            | 0x00000010\r\n        RF_ArchetypeObject               | 0x00000020\r\n        RF_Transient                     | 0x00000040\r\n        RF_MarkAsRootSet                 | 0x00000080\r\n        RF_TagGarbageTemp                | 0x00000100\r\n        RF_NeedInitialization            | 0x00000200\r\n        RF_NeedLoad                      | 0x00000400\r\n        RF_KeepForCooker                 | 0x00000800\r\n        RF_NeedPostLoad                  | 0x00001000\r\n        RF_NeedPostLoadSubobjects        | 0x00002000\r\n        RF_NewerVersionExists            | 0x00004000\r\n        RF_BeginDestroyed                | 0x00008000\r\n        RF_FinishDestroyed               | 0x00010000\r\n        RF_BeingRegenerated              | 0x00020000\r\n        RF_DefaultSubObject              | 0x00040000\r\n        RF_WasLoaded                     | 0x00080000\r\n        RF_TextExportTransient           | 0x00100000\r\n        RF_LoadCompleted                 | 0x00200000\r\n        RF_InheritableComponentTemplate  | 0x00400000\r\n        RF_DuplicateTransient            | 0x00800000\r\n        RF_StrongRefOnFrame              | 0x01000000\r\n        RF_NonPIEDuplicateTransient      | 0x01000000\r\n        RF_Dynamic                       | 0x02000000\r\n        RF_WillBeLoaded                  | 0x04000000\r\n        RF_HasExternalPackage            | 0x08000000\r\n        RF_AllFlags                      | 0x0FFFFFFF\r\n\r\n    EInternalObjectFlags\r\n        - A table of internal object flags that can be or'd together by using |.\r\n        ReachableInCluster               | 0x00800000\r\n        ClusterRoot                      | 0x01000000\r\n        Native                           | 0x02000000\r\n        Async                            | 0x04000000\r\n        AsyncLoading                     | 0x08000000\r\n        Unreachable                      | 0x10000000\r\n        PendingKill                      | 0x20000000\r\n        RootSet                          | 0x40000000\r\n        GarbageCollectionKeepFlags       | 0x0E000000\r\n        AllFlags                         | 0x7F800000\n"})}),"\n",(0,n.jsx)(r.h3,{id:"global-functions",children:"Global Functions"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"    print(string Message)\r\n        - Does not have the capability to format. Use 'string.format' if you require formatting.\r\n    \r\n    StaticFindObject(string ObjectName) -> { UObject | AActor | nil }\r\n    StaticFindObject(UClass Class=nil, UObject InOuter=nil, string ObjectName, bool ExactClass=false)\r\n        - Maps to https://docs.unrealengine.com/4.26/en-US/API/Runtime/CoreUObject/UObject/StaticFindObject/\r\n    \r\n    FindFirstOf(string ShortClassName) -> { UObject | AActor | nil }\r\n        - Find the first non-default instance of the supplied class name\r\n        - Param 'ShortClassName': Should only contains the class name itself without path info\r\n    \r\n    FindAllOf(string ShortClassName) -> table -> { UObject | AActor } | nil\r\n        - Find all non-default instances of the supplied class name\r\n        - Param 'ShortClassName': Should only contains the class name itself without path info\r\n    \r\n    RegisterKeyBind(integer Key, function Callback)\r\n    RegisterKeyBind(integer Key, table ModifierKeys, function callback)\r\n        - Registers a callback for a key-bind\r\n        - Callbacks can only be triggered while the game or debug console is on focus\r\n\r\n    IsKeyBindRegistered(integer Key)\r\n    IsKeyBindRegistered(integer Key, table ModifierKeys)\r\n        - Checks if, at the time of the invocation, the supplied keys have been registered\r\n    \r\n    RegisterHook(string UFunctionName, function Callback) -> integer, integer\r\n        - Registers a callback for a UFunction\r\n        - Callbacks are triggered when a UFunction is executed\r\n        - The callback params are: UObject self, UFunctionParams...\r\n        - Returns two ids, both of which must be passed to 'UnregisterHook' if you want to unregister the hook.\r\n\r\n    UnregisterHook(string UFunctionName, integer PreId, integer PostId)\r\n        - Unregisters a hook.\r\n\t\t\r\n    ExecuteInGameThread(function Callback)\r\n        - Execute code inside the game thread using ProcessEvent.\r\n        - Will execute as soon as the game has time to execute.\r\n\r\n    FName(string Name) -> FName\r\n    FName(integer ComparisonIndex) -> FName\r\n        - Returns the FName for this string/ComparisonIndex or the FName for \"None\" if the name doesn't exist\r\n\r\n    FText(string Text) -> FText\r\n        - Returns the FText representation of this string\r\n\r\n    StaticConstructObject(UClass Class,\r\n                          UObject Outer,\r\n                          FName Name, #Optional\r\n                          EObjectFlags Flags, #Optional\r\n                          EInternalObjectFlags InternalSetFlags, #Optional\r\n                          bool CopyTransientsFromClassDefaults, #Optional\r\n                          bool AssumeTemplateIsArchetype, #Optional\r\n                          UObject Template, #Optional\r\n                          FObjectInstancingGraph InstanceGraph, #Optional\r\n                          UPackage ExternalPackage, #Optional\r\n                          void SubobjectOverrides #Optional) -> UObject\r\n        - Attempts to construct a UObject of the passed UClass\r\n        - (>=4.26) Maps to https://docs.unrealengine.com/4.27/en-US/API/Runtime/CoreUObject/UObject/StaticConstructObject_Internal/1/\r\n        - (<4.25) Maps to https://docs.unrealengine.com/4.27/en-US/API/Runtime/CoreUObject/UObject/StaticConstructObject_Internal/2/\r\n\r\n    RegisterCustomProperty(table CustomPropertyInfo)\r\n        - Registers a custom property to be used automatically with 'UObject.__index'\r\n\r\n    ForEachUObject(function Callback)\r\n        - Execute the callback function for each UObject in GUObjectArray\r\n        - The callback params are: UObject object, integer ChunkIndex, integer ObjectIndex\r\n\r\n    NotifyOnNewObject(string UClassName, function Callback)\r\n        - Executes the provided Lua function whenever an instance of the provided class is constructed.\r\n        - Inheritance is taken into account, so if you provide \"/Script/Engine.Actor\" as the class then it will execute your\r\n        - Lua function when any object is constructed that's either an AActor or is derived from AActor.\r\n\r\n    RegisterCustomEvent(string EventName, function Callback)\r\n        - Registers a callback that will get called when a BP function/event is called with the name 'EventName'.\r\n    \r\n    RegisterLoadMapPreHook(function Callback)\r\n        - Registers a callback that will get called before UEngine::LoadMap is called.\r\n        - The callback params are: UEngine Engine, struct FWorldContext& WorldContext, FURL URL, class UPendingNetGame* PendingGame, FString& Error\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        \r\n    RegisterLoadMapPostHook(function Callback)\r\n        - Registers a callback that will get called after UEngine::LoadMap is called.\r\n        - The callback params are: UEngine Enigne, struct FWorldContext& WorldContext, FURL URL, class UPendingNetGame* PendingGame, FString& Error\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n\r\n    RegisterInitGameStatePreHook(function Callback)\r\n        - Registers a callback that will get called before AGameModeBase::InitGameState is called.\r\n        - The callback params are: AGameModeBase Context\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n\r\n    RegisterInitGameStatePostHook(function Callback)\r\n        - Registers a callback that will get called after AGameModeBase::InitGameState is called.\r\n        - The callback params are: AGameModeBase Context\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n\r\n    RegisterBeginPlayPreHook(function Callback)\r\n        - Registers a callback that will get called before AActor::BeginPlay is called.\r\n        - The callback params are: AActor Context\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n\r\n    RegisterBeginPlayPostHook(function Callback)\r\n        - Registers a callback that will get called after AActor::BeginPlay is called.\r\n        - The callback params are: AActor Context\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n\r\n    RegisterProcessConsoleExecPreHook(function Callback)\r\n        - Registers a callback that will get called before UObject::ProcessConsoleExec is called.\r\n        - The callback params are: UObject Context, string Cmd, table CommandParts, FOutputDevice Ar, UObject Executor\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - If the callback returns nothing (or nil), the original return value of ProcessConsoleExec will be used.\r\n        - If the callback returns true or false, the supplied value will override the original return value of ProcessConsoleExec.\r\n\r\n    RegisterProcessConsoleExecPostHook(function Callback)\r\n        - Registers a callback that will get called after UObject::ProcessConsoleExec is called.\r\n        - The callback params are: UObject Context, string Cmd, table CommandParts, FOutputDevice Ar, UObject Executor\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - If the callback returns nothing (or nil), the original return value of ProcessConsoleExec will be used.\r\n        - If the callback returns true or false, the supplied value will override the original return value of ProcessConsoleExec.\r\n\r\n    RegisterCallFunctionByNameWithArgumentsPreHook(function Callback)\r\n        - Registers a callback that will be called before UObject::CallFunctionByNameWithArguments is called.\r\n        - The callback params are: UObject Context, string Str, FOutputDevice Ar, UObject Executor, bool bForceCallWithNonExec\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - If the callback returns nothing (or nil), the original return value of CallFunctionByNameWithArguments will be used.\r\n        - If the callback returns true or false, the supplied value will override the original return value of CallFunctionByNameWithArguments.\r\n\r\n    RegisterCallFunctionByNameWithArgumentsPostHook(function Callback)\r\n        - Registers a callback that will be called after UObject::CallFunctionByNameWithArguments is called.\r\n        - The callback params are: UObject Context, string Str, FOutputDevice Ar, UObject Executor, bool bForceCallWithNonExec\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - If the callback returns nothing (or nil), the original return value of CallFunctionByNameWithArguments will be used.\r\n        - If the callback returns true or false, the supplied value will override the original return value of CallFunctionByNameWithArguments.\r\n\r\n    RegisterULocalPlayerExecPreHook(function Callback)\r\n        - Registers a callback that will be called before ULocalPlayer::Exec is called.\r\n        - The callback params are: ULocalPlayer Context, UWorld InWorld, string Cmd, FOutputDevice Ar\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - The callback can have two return values.\r\n        - If the first return value is nothing (or nil), the original return value of Exec will be used.\r\n        - If the first return value is true or false, the supplied value will override the original return value of Exec.\r\n        - The second return value controls whether the original Exec will execute.\r\n        - If the second return value is nil or true, the orginal Exec will execute.\r\n        - If the second return value is false, the original Exec will not execute.\r\n\r\n    RegisterULocalPlayerExecPostHook(function Callback)\r\n        - Registers a callback that will be called after ULocalPlayer::Exec is called.\r\n        - The callback params are: ULocalPlayer Context, UWorld InWorld, string Cmd, FOutputDevice Ar\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - The callback can have two return values.\r\n        - If the first return value is nothing (or nil), the original return value of Exec will be used.\r\n        - If the first return value is true or false, the supplied value will override the original return value of Exec.\r\n        - The second return value controls whether the original Exec will execute.\r\n        - If the second return value is nil or true, the orginal Exec will execute.\r\n        - If the second return value is false, the original Exec will not execute.\r\n\r\n    RegisterConsoleCommandHandler(string CommandName, function Callback)\r\n        - Registers a callback for a custom console commands.\r\n        - The callback only runs in the context of UGameViewportClient.\r\n        - The callback params are: string Cmd, table CommandParts, FOutputDevice Ar\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - The callback must return either true or false.\r\n        - If the callback returns true, no further handlers will be called for this command.\r\n\r\n    RegisterConsoleCommandGlobalHandler(string CommandName, function Callback)\r\n        - Registers a callback for a custom console command.\r\n        - Unlike 'RegisterConsoleCommandHandler', this global variant runs the callback for all contexts.\r\n        - The callback params are: string Cmd, table CommandParts, FOutputDevice Ar\r\n        - Params (except strings & bools & FOutputDevice) must be retrieved via 'Param:Get()' and set via 'Param:Set()'.\r\n        - The callback must return either true or false.\r\n        - If the callback returns true, no further handlers will be called for this command.\r\n\r\n    ExecuteAsync(function Callback)\r\n        - Asynchronously executes the specified function\r\n\r\n    ExecuteWithDelay(integer DelayInMilliseconds, function Callback)\r\n        - Asynchronously executes the specified function after the specified delay\r\n\r\n    RegisterConsoleCommandHandler(string CommandName, function Callback)\r\n        - Executes the provided Lua function whenever the CommandName is entered into the UE console.\r\n        - The parameters for the callback are the full command (string),\r\n        - and the parameters (table, containing the full command split by spaces), and FOutputDevice.\r\n        - In the callback, return true to prevent other handlers from handling the command, or false to allow other handlers.\r\n\r\n    LoadAsset(string AssetPathAndName)\r\n        - Loads an asset by name.\r\n        - Must only be called from within the game thread.\r\n        - For example, from within a UFunction hook or RegisterConsoleCommandHandler callback.\r\n\r\n    FindObject(string|FName|nil ClassName, string|FName|nil ObjectShortName, EObjectFlags RequiredFlags, EObjectFlags BannedFlags) -> UObject derivative\r\n        - Finds an object by either class name or short object name.\r\n        - ClassName or ObjectShortName can be nil, but not both.\r\n        - Returns a UObject of a derivative of UObject.\r\n\r\n    FindObject(UClass InClass, UObject InOuter, string Name, bool ExactClass)\r\n        - Finds an object. Works the same way as the function by the same name in the UE source.\r\n\r\n    FindObjects(integer NumObjectsToFind, string|FName|nil ClassName, string|FName|nil ObjectShortName, EObjectFlags RequiredFlags, EObjectFlags BannedFlags, bool bExactClass) -> table -> { UObject derivative }\r\n        - Finds the first specified number of objects by class name or short object name.\r\n        - To find all objects that match your criteria, set NumObjectsToFind to 0 or nil.\r\n        - Returns a table of UObject derivatives\r\n\r\n    LoopAsync(integer DelayInMilliseconds, function Callback)\r\n        - Starts a loop that sleeps for the supplied number of milliseconds and stops when the callback returns true.\r\n    \r\n    IterateGameDirectories() -> table\r\n        - Returns a table of all game directories.\r\n        - An example of an absolute path to Win64: Q:\\SteamLibrary\\steamapps\\common\\Deep Rock Galactic\\FSD\\Binaries\\Win64\r\n        - To get to the same directory, do: IterateGameDirectories().Game.Binaries.Win64\r\n        - Note that the game name is replaced by 'Game' to keep things generic.\r\n        - You can use '.__name' and '.__absolute_path' to retrieve values.\r\n        - You can use '.__files' to retrieve a table containing all files in this directory.\r\n        - You also use '.__name' and '.__absolute_path' for files.\n"})}),"\n",(0,n.jsx)(r.h3,{id:"classes",children:"Classes"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"    RemoteObject\r\n        Inheritance:\r\n        - The first of two base objects that all other objects inherits from\r\n        - Contains a pointer to a C/C++ object that's typically owned by the game\r\n        Methods\r\n            IsValid() -> bool\r\n                - Returns whether this object is valid or not\r\n\r\n    LocalObject\r\n        Inheritance:\r\n        - The second of two base objects that all other objects inherits from\r\n        - Contains an inlined object which is fully owned by Lua\r\n        Methods\r\n\r\n    UnrealVersion\r\n        Inheritance:\r\n        Methods\r\n            GetMajor() -> integer\r\n            GetMinor() -> integer\r\n            IsEqual(number MajorVersion, number MinorVersion) -> bool\r\n            IsAtLeast(number MajorVersion, number MinorVersion) -> bool\r\n            IsAtMost(number MajorVersion, number MinorVersion) -> bool\r\n            IsBelow(number MajorVersion, number MinorVersion) -> bool\r\n            IsAbove(number MajorVersion, number MinorVersion) -> bool\r\n\r\n    UE4SS\r\n        Inheritance:\r\n        - Class for interacting with UE4SS metadata\r\n        Methods\r\n            GetVersion() -> 3x integer\r\n                - Returns major, minor and hotfix version numbers\r\n                - To detect version 1.0 or below, check if \"UE4SS\" or \"UE4SS.GetVersion\" is nil\r\n\r\n    Mod\r\n        Inheritance: RemoteObject\r\n        - Class for interacting with the local mod object\r\n        Methods\r\n            SetSharedVariable(string VariableName, any Value)\r\n                - Sets a variable that can be accessed by any mod.\r\n                - The second parameter (Value) can only be one of the following types: nil, string, number, bool, UObject(+derivatives), lightuserdata.\r\n                - These variables do not get reset when hot-reloading.\r\n\r\n            GetSharedVariable(string VariableName) -> any\r\n                - Gets a variable that could've been set from another mod.\r\n                - The return value can only be one of the following types: nil, string, number, bool, UObject(+derivatives), lightuserdata.\r\n        \r\n            type() -> string\r\n                - Returns \"ModRef\"\r\n\r\n    UObject\r\n        Inheritance: RemoteObject\r\n        - This is the base class that most other Unreal Engine game objects inherit from\r\n        Methods\r\n            __index(string MemberVariableName) -> auto\r\n                - Attempts to return either a member variable or a callable UFunction\r\n                - Can return any type, you can use the 'type()' function on the returned value to figure out what Lua class it's using (if non-trivial type)\r\n            \r\n            __newindex(string MemberVariableName, auto NewValue)\r\n                - Attempts to set the value of a member variable\r\n            \r\n            GetFullName() -> string\r\n                - Returns the full name & path info for a UObject & its derivatives\r\n            \r\n            GetFName() -> FName\r\n                - Returns the FName of this object by copy\r\n                - All FNames returned by '__index' are returned by reference\r\n            \r\n            GetAddress() -> integer\r\n                - Returns the memory address of this object\r\n            \r\n            GetClass() -> UClass\r\n                - Returns the class of this object, this is equivalent to 'UObject->ClassPrivate' in Unreal\r\n\r\n            GetOuter() -> UObject\r\n                - Returns the Outer of this object\r\n\r\n            IsAnyClass() -> bool\r\n                - Returns true if this UObject is a UClass or a derivative of UClass\r\n\r\n            Reflection() -> UObjectReflection\r\n                - Returns a reflection object\r\n\r\n            GetPropertyValue(string MemberVariableName) -> auto\r\n                - Identical to __index\r\n\r\n            SetPropertyValue(string MemberVariableName auto NewValue)\r\n                - Identical to __newindex\r\n\r\n            IsClass() -> bool\r\n                - Returns whether this object is a UClass or UClass derivative\r\n\r\n            GetWorld() -> UWorld\r\n                - Returns the UWorld that this UObject is contained within.\r\n\r\n            CallFunction(UFunction function, auto Params...)\r\n                - Calls the supplied UFunction on this UObject.\r\n\r\n            IsA(UClass Class) -> bool\r\n            IsA(string FullClassName) -> bool\r\n                - Returns whether this object is of the specified class.\r\n\r\n            HasAllFlags(EObjectFlags FlagsToCheck)\r\n                - Returns whether the object has all of the specified flags.\r\n\r\n            HasAnyFlags(EObjectFlags FlagsToCheck)\r\n                - Returns whether the object has any of the specified flags.\r\n            \r\n            HasAnyInternalFlags(EInternalObjectFlags InternalFlagsToCheck)\r\n                - Return whether the object has any of the specified internal flags.\r\n\r\n            ProcessConsoleExec(string Cmd, nil Reserved, UObject Executor)\r\n                - Calls UObject::ProcessConsoleExec with the supplied params.\r\n\r\n            type() -> string\r\n                - Returns the type of this object as known by UE4SS\r\n                - This does not return the type as known by Unreal\r\n\r\n    UStruct\r\n        Inheritance: UObject\r\n        Methods\r\n            GetSuperStruct() -> UClass\r\n                - Returns the SuperStruct of this struct (can be invalid).\r\n\r\n            ForEachFunction(function Callback)\r\n                - Iterates every UFunction that belongs to this struct.\r\n                - The callback has one param: UFunction Function.\r\n                - Return true in the callback to stop iterating.\r\n\r\n            ForEachProperty(function Callback)\r\n                - Iterates every Property that belongs to this struct.\r\n                - The callback has one param: Property Property.\r\n                - Return true in the callback to stop iterating.\r\n\r\n    UClass\r\n        Inheritance: UClass\r\n        Methods\r\n            GetCDO() -> UClass\r\n                - Returns the ClassDefaultObject of a UClass.\r\n\r\n            IsChildOf(UClass Class) -> bool\r\n                - Returns whether or not the class is a child of another class.\r\n\r\n    AActor\r\n        Inheritance: UObject\r\n        Methods\r\n            GetWorld() -> UObject | nil\r\n                - Returns the UWorld that this actor belongs to\r\n            \r\n            GetLevel() -> UObject | nil\r\n                - Returns the ULevel that this actor belongs to\r\n    \r\n    FName\r\n        Inheritance: LocalObject\r\n        Methods\r\n            ToString() -> string\r\n                - Returns the string for this FName\r\n            \r\n            GetComparisonIndex() -> integer\r\n                - Returns the ComparisonIndex for this FName (index into global names array)\r\n    \r\n    TArray\r\n        Inheritance: RemoteObject\r\n        Methods\r\n            __index(integer ArrayIndex)\r\n                - Attempts to retrieve the value at the specified offset in the array\r\n                - Can return any type, you can use the 'type()' function on the returned value to figure out what Lua class it's using (if non-trivial type)\r\n            \r\n            __newindex(integer ArrayIndex, auto NewValue)\r\n                - Attempts to set the value at the specified offset in the array\r\n            \r\n            GetArrayAddress() -> integer\r\n                - Returns the address in memory where the TArray struct is located\r\n            \r\n            GetArrayNum() -> integer\r\n                - Returns the number of current elements in the array\r\n            \r\n            GetArrayMax() -> integer\r\n                - Returns the maximum number of elements allowed in this array (aka capacity)\r\n            \r\n            GetArrayDataAddress -> integer\r\n                - Returns the address in memory where the data for this array is stored\r\n            \r\n            ForEach(function Callback)\r\n                - Iterates the entire TArray and calls the callback function for each element in the array\r\n                - The callback params are: integer index, RemoteUnrealParam | LocalUnrealParam elem\r\n                - Use 'elem:get()' and 'elem:set()' to access/mutate an array element\r\n\r\n    UEnum\r\n        Inheritance: RemoteObject\r\n        Methods\r\n            GetNameByValue(integer Value) -> FName\r\n                - Returns the FName that corresponds to the specified value.\r\n            ForEachName(LuaFunction Callback) -> FName\r\n                - Iterates every FName/Value combination that belongs to this enum.\r\n                - The callback has two params: FName Name, integer Value.\r\n                - Return true in the callback to stop iterating.\r\n\r\n    RemoteUnrealParam | LocalUnrealParam\r\n        Inheritance: RemoteObject | LocalObject\r\n            - This is a dynamic wrapper for any and all types & classes\r\n            - Whether the Remote or Local variant is used depends on the requirements of the data but the usage is identical with either param types\r\n        Methods\r\n            get() -> auto\r\n                - Returns the underlying value for this param\r\n            \r\n            set(auto NewValue)\r\n                - Sets the underlying value for this param\r\n            \r\n            type() -> string\r\n                - Returns \"RemoteUnrealParam\" or \"LocalUnrealParam\"\r\n    \r\n    UScriptStruct\r\n        Inheritance: LocalObject\r\n        Methods\r\n            __index(string StructMemberVarName) -> auto\r\n                - Attempts to return the value for the supplied variable\r\n                - Can return any type, you can use the 'type()' function on the returned value to figure out what Lua class it's using (if non-trivial type)\r\n            \r\n            __newindex(string StructMemberVarName, auto NewValue)\r\n                - Attempts to set the value for the supplied variable\r\n            \r\n            GetBaseAddress() -> integer\r\n                - Returns the address in memory where the UObject that this UScriptStruct belongs to is located\r\n            \r\n            GetStructAddress() -> integer\r\n                - Returns the address in memory where this UScriptStruct is located\r\n            \r\n            GetPropertyAddress() -> integer\r\n                - Returns the address in memory where the corresponding U/FProperty is located\r\n\r\n            IsValid() -> bool\r\n                - Returns whether the struct is valid\r\n\r\n            IsMappedToObject() -> bool\r\n                - Returns whether the base object is valid\r\n\r\n            IsMappedToProperty() -> bool\r\n                - Returns whether the property is valid\r\n            \r\n            type() -> string\r\n                - Returns \"UScriptStruct\"\r\n    \r\n    UFunction\r\n        Inheritance: UObject\r\n        Methods\r\n            __call(UFunctionParams...)\r\n                - Attempts to call the UFunction\r\n\r\n            GetFunctionFlags() -> integer\r\n                - Returns the flags for the UFunction.\r\n\r\n            SetFunctionFlags(integer Flags)\r\n                Sets the flags for the UFuction.\r\n\r\n    FString\r\n        Inheritance: RemoteObject\r\n            - A TArray of characters\r\n        Methods\r\n            ToString()\r\n                - Returns a string that Lua can understand\r\n\r\n            Clear()\r\n                - Clears the string by setting the number of elements in the TArray to 0\r\n\r\n    FieldClass\r\n        Inheritance: LocalObject\r\n        Methods\r\n            GetFName()\r\n                - Returns the FName of this class by copy.\r\n\r\n    Property\r\n        Inheritance: RemoteObject\r\n        Methods\r\n            GetFullName() -> string\r\n                - Returns the full name & path for this property.\r\n\r\n            GetFName() -> FName\r\n                - Returns the FName of this property by copy.\r\n                - All FNames returned by '__index' are returned by reference.\r\n\r\n            IsA(PropertyTypes PropertyType) -> bool\r\n                - Returns true if the property is of type PropertyType.\r\n\r\n            GetClass() -> PropertyClass\r\n\r\n            ContainerPtrToValuePtr(UObjectDerivative Container, integer ArrayIndex) -> LightUserdata\r\n                - Equivalent to FProperty::ContainerPtrToValuePtr<uint8> in UE.\r\n\r\n            ImportText(string Buffer, LightUserdata Data, integer PortFlags, UObject OwnerObject)\r\n                - Equivalent to FProperty::ImportText in UE, except without the 'ErrorText' param.\r\n\r\n    ObjectProperty\r\n        Inheritance: Property\r\n        Methods\r\n            GetPropertyClass() -> UClass\r\n                - Returns the class that this property holds.\r\n\r\n    BoolProperty\r\n        Inheritance: Property\r\n        Methods\r\n            GetByteMask() -> integer\r\n            GetByteOffset() -> integer\r\n            GetFieldMask() -> integer\r\n            GetFieldSize() -> integer\r\n\r\n    StructProperty\r\n        Inheritance: Property\r\n        Methods\r\n            GetStruct() -> UScriptStruct\r\n                - Returns the UScriptStruct that's mapped to this property.\r\n\r\n    ArrayProperty\r\n        Inheritance: Property\r\n        Methods\r\n            GetInner() -> Property\r\n                - Returns the inner property of the array.\r\n\r\n    UObjectReflection\r\n        Inheritance:\r\n        Methods\r\n            GetProperty(string PropertyName) -> Property\r\n                - Returns a property meta-data object\r\n\r\n    FOutputDevice\r\n        Inheritance: RemoteObject\r\n        Methods\r\n            Log(string Message)\r\n                - Logs a message to the output device (i.e: the in-game console)\r\n\r\n    FWeakObjectPtr\r\n        Inheritance: LocalObject\r\n        Methods\r\n            Get() -> UObjectDerivative\r\n                - Returns the pointed to UObject or UObject derivative (can be invalid, so call UObject:IsValid after calling Get).\n"})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>i});var n=t(6540);const a={},s=n.createContext(a);function o(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);