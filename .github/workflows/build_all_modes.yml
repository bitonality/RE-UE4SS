name: Build All Modes
permissions:
    contents: write
    pull-requests: write # For adding comments to PR.
on:
  workflow_dispatch:
  pull_request:
    branches:
        - 'main'
    paths-ignore:
        - 'README.md'
        - 'docs/**'
        - 'docs-export/**'

jobs:
  calculate_matrix:
    name: Calculate job matrix
    runs-on: windows-2022
    outputs:
      jobs: ${{ steps.jobs.outputs.jobs }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # needed to get commits since last tag
          token: ${{ secrets.UEPSEUDO_PAT }}
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1.13.0

      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
      - name: Calculate the CI job matrix
        run: |
          $modes = (xmake ci --dump=modes) | ConvertTo-Json
          echo "jobs=$($modes | jq -cn --argjson modes $modes '{mode: $modes}')" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        id: jobs
        shell: powershell
  build:
    name: ${{ matrix.mode }}
    needs: [ calculate_matrix ]
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.calculate_matrix.outputs.jobs) }}
    steps:
      - name: Get current date as package key
        id: cache_key
        run: echo "key=$(date +'%W')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # needed to get commits since last tag
          token: ${{ secrets.UEPSEUDO_PAT }}
          # Force xmake to a specific folder (for cache)
      - name: Set xmake env
        run: echo "XMAKE_GLOBALDIR=${{ runner.workspace }}/xmake-global" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Install VS2022 BuildTools 17.9.7
        run: choco install -y visualstudio2022buildtools --version=117.9.7.0 --params "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --installChannelUri https://aka.ms/vs/17/release/180911598_-255012421/channel"
    #  - name: Setup MSVC
    #    uses: ilammy/msvc-dev-cmd@v1.13.0
    #    with:
     #     toolset: "14.3"
      - name: Setup xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
          actions-cache-folder: .xmake-cache-W${{ steps.cache_key.outputs.key }}
      - name: Update xmake repository
        run: xmake repo --update
            # Fetch xmake dephash
      - name: Retrieve dependencies hash
        id: dep_hash
        run: echo "hash=$(xmake l utils.ci.packageskey)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      # Cache xmake dependencies
      - name: Restore cached xmake dependencies
        id: restore-depcache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}\.xmake\packages
          key: MSVC-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}-W${{ steps.cache_key.outputs.key }}
    # Setup compilation mode and install project dependencies
      - name: Configure xmake and install dependencies
        run: |
          cmake --version
          Import-Module 'C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll'
          Enter-VsDevShell -VsInstallPath 'C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools' -DevCmdArguments '-arch=x64 -host_arch=x64'

          xmake config -vD -m "${{matrix.mode}}" -y
        shell: powershell
      - name: Save cached xmake dependencies
        if: ${{ !steps.restore-depcache.outputs.cache-hit }}
        uses: actions/cache/save@v4
        with:
          path: ${{ env.XMAKE_GLOBALDIR }}/.xmake/packages
          key: ${{ steps.restore-depcache.outputs.cache-primary-key }}
      - name: Build
        run: |
          xmake build -y